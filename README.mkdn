some dotfiles
=============

How I use it:

1. setup a new system

2. install git

3. change to home dir: `cd $HOME`

4.  `git co https://github.com/cactus/dotconfigs.git .myconfigs`

5.  Run the 'move in' script: `.myconfigs/scripts/setup.sh`
    
    Some action may be required. The script will report if any files already
    exist, and would cause a collision. Remove those files and run the script
    again. Rinse and repeat until no output is produced.

6. Source the new .zshrc: `. $HOME/.zshrc`

After a change is pushed to the repo, update any installs by calling
`dotfiles_update` (an exported shell function). This will also create symlinks
for any new files.


directories
===========

-   scripts/
    
    contains the helper scripts to create symlinks and update the dotfiles
    local repo

-   examples/
    
    some reference configs

-   dotfiles/
    
    the dot files for various things. these are symlinked to the `$HOME`
    directory and prepended with a dot (`.`). Files or directories prefixed 
    with an underscore (`_`) are ignored.

    example: $HOME/.zshrc -> dotfiles/zshrc


notes
=====

-   `.zshrc_pre` and `.zshrc_post` files can be created to handle system 
    specific configuration. These files are sourced at the beginning, and end 
    (respectively), of the `.zshrc` file.

    This allows modification of behaviors later in the `.zshrc` file, while
    keeping that file as system agnostic as possible.
